<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qkwl.service.user.dao.FinanceRecordMapper">
    <sql id="FinanceColumn">
            fid,
            uid,
            relation_id,
            relation_coin_id,
            relation_coin_name,
            amount,
            operation,
            status,
            tx_id,
            recharge_address,
            withdraw_address,
            memo,
            fee,
            wallet_operation_date,
            create_date,
            update_date
    </sql>

    <select id="countPage" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from finance_record
        WHERE 1=1
        <if test="uid != null">
            AND uid = #{uid,jdbcType=INTEGER}
        </if>
        <if test="coinId != null">
            AND relation_coin_id = #{coinId,jdbcType=INTEGER}
        </if>
        <if test="operation != null">
            AND operation = #{operation,jdbcType=INTEGER}
        </if>
        <if test="relationId != null">
            AND relation_id = #{relationId,jdbcType=INTEGER}
        </if>
    </select>
    <select id="selectByParams" parameterType="java.util.Map" resultType="FinanceRecordDTO">
        select <include refid="FinanceColumn"/>
        from finance_record where 1=1
        <if test="uid != null">
            AND uid = #{uid,jdbcType=INTEGER}
        </if>
        <if test="coinId != null">
            AND relation_coin_id = #{coinId,jdbcType=INTEGER}
        </if>
        <if test="operation != null">
            AND operation = #{operation,jdbcType=INTEGER}
        </if>
        <if test="relationId != null">
            AND relation_id = #{relationId,jdbcType=INTEGER}
        </if>
        order by ${orderfield} ${orderdirection}
        limit #{offset},#{limit}
    </select>

    <insert id="insert" parameterType="FinanceRecordDTO" keyProperty="fid">
        INSERT INTO finance_record (
        uid,
        relation_id,
        relation_coin_id,
        relation_coin_name,
        amount,
        operation,
        status,
        tx_id,
        recharge_address,
        withdraw_address,
        memo,
        fee,
        wallet_operation_date,
        create_date,
        update_date
        )
        VALUES (
        #{uid,jdbcType=INTEGER},
        #{relationId,jdbcType=INTEGER},
        #{relationCoinId,jdbcType=INTEGER},
        #{relationCoinName,jdbcType=VARCHAR},
        #{amount,jdbcType=DECIMAL},
        #{operation,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER},
        #{txId,jdbcType=VARCHAR},
        #{rechargeAddress,jdbcType=VARCHAR},
        #{withdrawAddress,jdbcType=VARCHAR},
        #{memo,jdbcType=VARCHAR},
        #{fee,jdbcType=DECIMAL},
        #{walletOperationDate,jdbcType=TIMESTAMP},
        #{createDate,jdbcType=TIMESTAMP},
        #{updateDate,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updatePyPrimaryKey" parameterType="FinanceRecordDTO">
         UPDATE finance_record
        SET
            status      = #{status,jdbcType=INTEGER},
            update_date = #{updateDate,jdbcType=TIMESTAMP}
        WHERE
            fid = #{fid,jdbcType=INTEGER}
    </update>

</mapper>