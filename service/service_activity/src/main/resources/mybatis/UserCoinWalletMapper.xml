<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qkwl.service.activity.dao.UserCoinWalletMapper">

  <sql id="column">id, uid, coin_id, total, frozen, borrow, gmt_create, gmt_modified</sql>

  <update id="update" parameterType="UserCoinWallet">
    update user_coin_wallet
    set uid = #{uid,jdbcType=INTEGER},
      coin_id = #{coinId,jdbcType=INTEGER},
      total = #{total,jdbcType=DECIMAL},
      frozen = #{frozen,jdbcType=DECIMAL},
      borrow = #{borrow,jdbcType=DECIMAL},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="select" resultType="UserCoinWallet">
    select <include refid="column" /> from user_coin_wallet where uid = #{uid} and coin_id = #{coinId}
  </select>
  
  <select id="selectLock" resultType="UserCoinWallet">
    select <include refid="column" /> from user_coin_wallet where uid = #{uid} and coin_id = #{coinId} for update
  </select>

  <select id="selectSum" resultType="UserCoinWallet">
    select sum(total) total, sum(frozen) frozen from user_coin_wallet where coin_id = #{coinId}
  </select>

  <select id="selectUid" resultType="UserCoinWallet">
    select <include refid="column" /> from user_coin_wallet where uid = #{uid}
  </select>

</mapper>